apiVersion: flux-framework.org/v1alpha1
kind: MiniCluster
metadata:
  name: flux-sample
  namespace: flux-operator
spec:
  size: 2
  # If we don't set this, we won't be able to go above two!
  maxSize: 10
  interactive: true

  # This allows us to see zeromq and debug logging
  flux:
    logLevel: 7
  logging:
    zeromq: true

  # Add an nginx service with an existing config map
  # This isn't currently used, but is a setup I'm keeping for 
  # potentially later, adding some integration with flux restful
  services:
    - image: nginx
      name: nginx
      existingVolumes:
        nginx-conf:
          configMapName: nginx-conf 
          path: /etc/nginx/conf.d
          items:
            flux.conf: flux.conf

  # This is a list because a pod can support multiple containers
  containers:
    - image: ghcr.io/rse-ops/singularity:tag-mamba
      workingDir: /tmp/workflow

      # We will use launcher here to just run the command
      # You can shell in to connect to the broker and issue commands that use CPU

      # This should not be done in production
      environment:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/workflow/application_default_credentials.json

      # Important! We need to have resource requests for the horizonal autoscaler
      # The Flux Operator doesn't know you want to use it, so it's up to you
      # to provide these if your metric is about CPU
      resources:
        limits:
          cpu: "1"

        requests:
          cpu: "1"
      
      # This pulls the container (once) by the broker to workingDir /data
      commands:
        pre: |
          pip install --upgrade pip
          git clone -b add/gke-kubectl-client https://github.com/converged-computing/kubescaler
          cd kubescaler
          pip install -e .[google]
          pip install -e .[aws]
          cd -
          git clone --depth 1 -b bursting https://github.com/flux-framework/flux-operator ./op
          cd ./op/sdk/python/v1alpha1
          pip install -e .
          cd -
          pip install IPython

      fluxUser:
        name: fluxuser