apiVersion: flux-framework.org/v1alpha1
kind: MiniCluster
metadata:
  name: flux-sample
  namespace: flux-operator
spec:
  size: 2
  # If we don't set this, we won't be able to go above two
  # and the request for 4 nodes will fail instead of scheduling
  maxSize: 4
  interactive: true

  # This allows us to see zeromq and debug logging
  flux:
    logLevel: 7

    # Declare that this cluster will allow for a bursted cluster
    # It would automatically be named burst-0, but we explicitly set
    # for clarity. The lead broker is left out because this IS it.
    bursting:
      clusters:
        - size: 4
          name: burst-0

  interactive: true
  logging:
    zeromq: true

  # This is a list because a pod can support multiple containers
  containers:
    - image: ghcr.io/flux-framework/flux-restful-api@sha256:be2326f12b70721d92a17a277d5cb9e9d7383e93ce488060b78b6f6a394dcb82
      workingDir: /tmp/workflow

      # Commands to support installing flux-burst plugins
      commands:
        pre: |
          git clone --depth 1 https://github.com/flux-framework/flux-operator ./op
          cd ./op/sdk/python/v1alpha1
          pip install .
          cd -
          git clone -b test-plugin https://github.com/converged-computing/flux-burst ./burst
          cd ./burst 
          pip install .[kubernetes]
          cd -
          git clone -b fix-eks-wait-for-nodes https://github.com/converged-computing/kubescaler ./ks
          cd ./ks 
          pip install .
          cd -
          git clone -b test-plugin https://github.com/converged-computing/flux-burst-eks ./fb
          cd ./fb
          pip install .
          cd -
          # Install kubectl
          apt-get update && apt-get install -y curl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          mv ./kubectl /usr/bin/kubectl

      # Important! We need to have resource requests for the horizonal autoscaler
      # The Flux Operator doesn't know you want to use it, so it's up to you
      # to provide these if your metric is about CPU
      resources:
        limits:
          cpu: "1"

        requests:
          cpu: "1"