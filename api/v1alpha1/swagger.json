{
  "swagger": "2.0",
  "info": {
    "description": "Python SDK for Flux-Operator",
    "title": "fluxoperator",
    "version": "v1alpha1"
  },
  "paths": {},
  "definitions": {
    "Commands": {
      "type": "object",
      "properties": {
        "pre": {
          "description": "pre command is run after global PreCommand, before anything else",
          "type": "string",
          "default": ""
        },
        "runFluxAsRoot": {
          "description": "Run flux start as root - required for some storage binds",
          "type": "boolean",
          "default": false
        }
      }
    },
    "ContainerResources": {
      "description": "ContainerResources include limits and requests",
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/IntOrString"
          }
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/IntOrString"
          }
        }
      }
    },
    "ContainerVolume": {
      "description": "A Container volume must reference one defined for the MiniCluster The path here is in the container",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "type": "string",
          "default": ""
        },
        "readOnly": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "FluxRestful": {
      "type": "object",
      "properties": {
        "branch": {
          "description": "Branch to clone Flux Restful API from",
          "type": "string",
          "default": "main"
        },
        "port": {
          "description": "Port to run Flux Restful Server On",
          "type": "integer",
          "format": "int32",
          "default": 5000
        },
        "secretKey": {
          "description": "Secret key shared between server and client",
          "type": "string",
          "default": ""
        },
        "token": {
          "description": "Token to use for RestFul API",
          "type": "string",
          "default": ""
        },
        "username": {
          "description": "These two should not actually be set by a user, but rather generated by tools and provided Username to use for RestFul API",
          "type": "string",
          "default": ""
        }
      }
    },
    "FluxUser": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Flux user name",
          "type": "string",
          "default": "flux"
        },
        "uid": {
          "description": "UID for the FluxUser",
          "type": "integer",
          "format": "int32",
          "default": 1000
        }
      }
    },
    "LifeCycle": {
      "type": "object",
      "properties": {
        "postStartExec": {
          "type": "string",
          "default": ""
        }
      }
    },
    "LoggingSpec": {
      "type": "object",
      "properties": {
        "debug": {
          "description": "Debug mode adds extra verbosity to Flux",
          "type": "boolean",
          "default": false
        },
        "quiet": {
          "description": "Quiet mode silences all output so the job only shows the test running",
          "type": "boolean",
          "default": false
        },
        "strict": {
          "description": "Strict mode ensures any failure will not continue in the job entrypoint",
          "type": "boolean",
          "default": true
        },
        "timed": {
          "description": "Timed mode adds timing to Flux commands",
          "type": "boolean",
          "default": false
        }
      }
    },
    "MiniCluster": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/v1ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/MiniClusterSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/MiniClusterStatus"
        }
      }
    },
    "MiniClusterArchive": {
      "type": "object",
      "properties": {
        "path": {
          "description": "Save or load from this directory path",
          "type": "string"
        }
      }
    },
    "MiniClusterContainer": {
      "type": "object",
      "properties": {
        "command": {
          "description": "Single user executable to provide to flux start",
          "type": "string",
          "default": ""
        },
        "commands": {
          "description": "More specific or detailed commands for just workers/broker",
          "default": {},
          "$ref": "#/definitions/Commands"
        },
        "cores": {
          "description": "Cores the container should use",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "diagnostics": {
          "description": "Run flux diagnostics on start instead of command",
          "type": "boolean",
          "default": false
        },
        "environment": {
          "description": "Key/value pairs for the environment",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "existingVolumes": {
          "description": "Existing Volumes to add to the containers",
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/MiniClusterExistingVolume"
          }
        },
        "fluxLogLevel": {
          "description": "Log level to use for flux logging (only in non TestMode)",
          "type": "integer",
          "format": "int32",
          "default": 6
        },
        "fluxOptionFlags": {
          "description": "Flux option flags, usually provided with -o optional - if needed, default option flags for the server These can also be set in the user interface to override here. This is only valid for a FluxRunner \"runFlux\" true",
          "type": "string",
          "default": ""
        },
        "fluxUser": {
          "description": "Flux User, if created in the container",
          "default": {},
          "$ref": "#/definitions/FluxUser"
        },
        "image": {
          "description": "Container image must contain flux and flux-sched install",
          "type": "string",
          "default": "ghcr.io/rse-ops/accounting:app-latest"
        },
        "imagePullSecret": {
          "description": "Allow the user to pull authenticated images By default no secret is selected. Setting this with the name of an already existing imagePullSecret will specify that secret in the pod spec.",
          "type": "string",
          "default": ""
        },
        "launcher": {
          "description": "Indicate that the command is a launcher that will ask for its own jobs (and provided directly to flux start)",
          "type": "boolean",
          "default": false
        },
        "lifeCycle": {
          "description": "Lifecycle can handle post start commands, etc.",
          "default": {},
          "$ref": "#/definitions/LifeCycle"
        },
        "name": {
          "description": "Container name is only required for non flux runners",
          "type": "string",
          "default": ""
        },
        "ports": {
          "description": "Ports to be exposed to other containers in the cluster We take a single list of integers and map to the same",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "x-kubernetes-list-type": "atomic"
        },
        "preCommand": {
          "description": "Special command to run at beginning of script, directly after asFlux is defined as sudo -u flux -E (so you can change that if desired.) This is only valid if FluxRunner is set (that writes a wait.sh script) This is for the indexed job pods and the certificate generation container.",
          "type": "string",
          "default": ""
        },
        "pullAlways": {
          "description": "Allow the user to dictate pulling By default we pull if not present. Setting this to true will indicate to pull always",
          "type": "boolean",
          "default": false
        },
        "resources": {
          "description": "Resources include limits and requests",
          "default": {},
          "$ref": "#/definitions/ContainerResources"
        },
        "runFlux": {
          "description": "Main container to run flux (only should be one)",
          "type": "boolean",
          "default": false
        },
        "volumes": {
          "description": "Volumes that can be mounted (must be defined in volumes)",
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/ContainerVolume"
          }
        },
        "workingDir": {
          "description": "Working directory to run command from",
          "type": "string",
          "default": ""
        }
      }
    },
    "MiniClusterExistingVolume": {
      "description": "Mini Cluster local volumes available to mount (these are on the host)",
      "type": "object",
      "required": [
        "path",
        "claimName"
      ],
      "properties": {
        "claimName": {
          "type": "string",
          "default": ""
        },
        "path": {
          "description": "Path and claim name are always required",
          "type": "string",
          "default": ""
        },
        "readOnly": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "MiniClusterList": {
      "description": "MiniClusterList contains a list of MiniCluster",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/MiniCluster"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/v1ListMeta"
        }
      }
    },
    "MiniClusterSpec": {
      "type": "object",
      "required": [
        "containers"
      ],
      "properties": {
        "archive": {
          "description": "Archive to load or save",
          "default": {},
          "$ref": "#/definitions/MiniClusterArchive"
        },
        "cleanup": {
          "description": "Cleanup the pods and storage when the index broker pod is complete",
          "type": "boolean",
          "default": false
        },
        "containers": {
          "description": "Containers is one or more containers to be created in a pod. There should only be one container to run flux with runFlux",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/MiniClusterContainer"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "deadlineSeconds": {
          "description": "Should the job be limited to a particular number of seconds? Approximately one year. This cannot be zero or job won't start",
          "type": "integer",
          "format": "int64",
          "default": 31500000
        },
        "fluxRestful": {
          "description": "Customization to Flux Restful API There should only be one container to run flux with runFlux",
          "default": {},
          "$ref": "#/definitions/FluxRestful"
        },
        "interactive": {
          "description": "Run a single-user, interactive minicluster",
          "type": "boolean",
          "default": false
        },
        "jobLabels": {
          "description": "Labels for the job",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "logging": {
          "description": "Logging modes determine the output you see in the job log",
          "default": {},
          "$ref": "#/definitions/LoggingSpec"
        },
        "pod": {
          "description": "Pod spec details",
          "default": {},
          "$ref": "#/definitions/PodSpec"
        },
        "size": {
          "description": "Size (number of job pods to run, size of minicluster in pods)",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "tasks": {
          "description": "Total number of CPUs being run across entire cluster",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "users": {
          "description": "Users of the MiniCluster",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/MiniClusterUser"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "volumes": {
          "description": "Volumes accessible to containers from a host Not all containers are required to use them",
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/MiniClusterVolume"
          }
        }
      }
    },
    "MiniClusterStatus": {
      "description": "MiniClusterStatus defines the observed state of Flux",
      "type": "object",
      "required": [
        "jobid"
      ],
      "properties": {
        "conditions": {
          "description": "conditions hold the latest Flux Job and MiniCluster states",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/v1Condition"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "jobid": {
          "description": "The Jobid is set internally to associate to a miniCluster This isn't currently in use, we only have one!",
          "type": "string",
          "default": ""
        }
      }
    },
    "MiniClusterUser": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "If a user is defined, the username is required",
          "type": "string",
          "default": ""
        },
        "password": {
          "type": "string",
          "default": ""
        }
      }
    },
    "MiniClusterVolume": {
      "description": "Mini Cluster local volumes available to mount (these are on the host)",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "annotations": {
          "description": "Annotations for the volume",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "attributes": {
          "description": "Optional volume attributes",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "capacity": {
          "description": "Capacity (string) for PVC (storage request) to create PV",
          "type": "string",
          "default": "5Gi"
        },
        "claimAnnotations": {
          "description": "Annotations for the persistent volume claim",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "delete": {
          "description": "Delete the persistent volume on cleanup",
          "type": "boolean",
          "default": true
        },
        "driver": {
          "description": "Storage driver, e.g., gcs.csi.ofek.dev Only needed if not using hostpath",
          "type": "string",
          "default": ""
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "path": {
          "type": "string",
          "default": ""
        },
        "secret": {
          "description": "Secret reference in Kubernetes with service account role",
          "type": "string",
          "default": ""
        },
        "secretNamespace": {
          "description": "Secret namespace",
          "type": "string",
          "default": "default"
        },
        "storageClass": {
          "type": "string",
          "default": "hostpath"
        },
        "volumeHandle": {
          "description": "Volume handle, falls back to storage class name if not defined",
          "type": "string",
          "default": ""
        }
      }
    },
    "PodSpec": {
      "description": "PodSpec controlls variables for the cluster pod",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations for each pod",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "labels": {
          "description": "Labels for each pod",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "resources": {
          "description": "Resources include limits and requests",
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/IntOrString"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "The Flux Operator",
    "url": "https://flux-framework.org/flux-operator"
  }
}
