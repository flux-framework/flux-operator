/*
Copyright 2022 Lawrence Livermore National Security, LLC
 (c.f. AUTHORS, NOTICE.LLNS, COPYING)

This is part of the Flux resource manager framework.
For details, see https://github.com/flux-framework.

SPDX-License-Identifier: Apache-2.0
*/

package controllers

var (
	brokerConfigTemplate = `
# Flux needs to know the path to the IMP executable
[exec]
imp = "/usr/libexec/flux/flux-imp"

[access]
allow-guest-user = true
allow-root-owner = true

# Point to resource definition generated with flux-R(1).
[resource]
path = "/etc/flux/system/R"

[bootstrap]
curve_cert = "/mnt/curve/curve.cert"
default_port = 8050
default_bind = "tcp://eth0:%%p"
default_connect = "tcp://%%h:%%p"
hosts = [
	{ host="%s-%s"},
]
`
	waitToStartTemplate = `#!/bin/sh

# This waiting script is run continuously and only updates
# hosts and runs the job (breaking from the while) when 
# update_hosts.sh has been populated. This means the pod usually
# needs to be updated with the config map that has ips!

# We determine the update_hosts.sh is ready when it has content
count_lines() {
	lines=$(cat /flux_operator/update_hosts.sh | wc -l)
	echo $lines
}

while [ $(count_lines) -lt 2 ];
do
    echo "Host updating script not available yet, waiting..."
    sleep 5s
done             

# Run to discover hosts
/bin/sh /flux_operator/update_hosts.sh

# Show host updates
cat /etc/hosts

# Main host <name>-0
mainHost="%s"

printf "\nüëã Hello, I'm $(hostname)\n"
printf "The main host is ${mainHost}\n"

# These actions need to happen on all hosts
# Configure resources
mkdir -p /etc/flux/system

# --cores=IDS Assign cores with IDS to each rank in R, so we  assign 1-N to 0
flux R encode --hosts=%s --cores=%s > /etc/flux/system/R
printf "\nüì¶ Resources\n"
cat /etc/flux/system/R

mkdir -p /etc/flux/imp/conf.d/
cat <<EOT >> /etc/flux/imp/conf.d/imp.toml
[exec]
allowed-users = [ "flux", "root" ]
allowed-shells = [ "/usr/libexec/flux/flux-shell" ]	
EOT

printf "\nü¶ä Imp\n"
cat /etc/flux/imp/conf.d/imp.toml

# Add a flux user (required)
useradd flux || echo "flux user already exists"

# Generate curve certificate (only need one shared)
if [ $(hostname) == "${mainHost}" ]; then
    printf "\n‚ú® Curve certificate being generated by $(hostname)\n"
    flux keygen /mnt/curve/curve.cert
    cat /mnt/curve/curve.cert

	# Start flux with the original entrypoint
    printf "\nüê∏ /bin/sh /flux_operator/start.sh $@\n"
    /bin/sh /flux_operator/start.sh $@
else
    #printf "\nüí§ $(hostname) is waiting for main flux node\n"
	#printf "\nüê∏ flux start -o --config /etc/flux/config sleep infinity\n"
    # TODO or should it be this one?
	#flux start -o --config /etc/flux/config sleep infinity
    /bin/sh /flux_operator/start.sh $@
fi
`

	startFluxTemplate = `#/bin/sh
printf "\nüåÄ flux start -o --config /etc/flux/config $@\n"
flux start -o --config /etc/flux/config $@
`
)
