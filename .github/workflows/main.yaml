name: test flux-operator

on:
  pull_request: []

jobs:
  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup black linter
      run: conda create --quiet --name black pyflakes

    - name: Check Spelling
      uses: crate-ci/typos@7ad296c72fa8265059cc03d1eda562fbdfcd6df2 # v1.9.0
      with:
        files: ./docs/*/*.md ./docs/*/*/*.md ./docs/*.md ./README.md ./config/samples ./docs/*.md

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: ^1.18
    - name: fmt check
      run: make fmt

    - name: Build and Install Operator
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        make
        make manifests
        make kustomize

    # These aren't written yet
    - name: Run Unit tests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: make test

    # Ensure build-config is the same as the one we have
    - name: Check Updated flux-operator.yaml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cp examples/dist/flux-operator.yaml /tmp/flux-operator.yaml
        make build-config
        diff examples/dist/flux-operator.yaml /tmp/flux-operator.yaml

  test-jobs:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: [["hello-world", "ghcr.io/flux-framework/flux-restful-api:latest", 40],
               ["post", "ghcr.io/flux-framework/flux-restful-api:latest", 40],
               ["batch", "ghcr.io/flux-framework/flux-restful-api:latest", 40],
               ["singularity", "ghcr.io/rse-ops/singularity:tag-mamba", 50],
               ["nginx-sidecar-service", "ghcr.io/flux-framework/flux-restful-api:latest", 50],
               ["nginx-service", "ghcr.io/flux-framework/flux-restful-api:latest", 50],
               ["lammps", "ghcr.io/rse-ops/lammps:flux-sched-focal-v0.24.0", 40],
               ["pokemon", "ghcr.io/rse-ops/pokemon:app-latest", 40],
               ["timed", "ghcr.io/flux-framework/flux-restful-api:latest", 40],
               ["debug", "ghcr.io/flux-framework/flux-restful-api:latest", 40],
               ["flux-resource-list", "ghcr.io/flux-framework/flux-restful-api:latest", 40],
               ["existing-volumes", "ghcr.io/flux-framework/flux-restful-api:latest", 50],
               ["volumes", "ghcr.io/flux-framework/flux-restful-api:latest", 50],
               ["snakemake", "ghcr.io/rse-ops/atacseq:app-latest", 40]]

    steps:
    - name: Clone the code
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: ^1.18

    - name: Create k8s Kind Cluster
      run: |
        curl -Lo ./kind "https://kind.sigs.k8s.io/dl/v0.17.0/kind-$(uname)-amd64"
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind      
        # prepares host mount at /tmp/data
        kind create cluster --config ./script/kind-config.yaml

    - name: Create the namespace
      run: kubectl create namespace flux-operator

    - name: Pull Docker Containers
      env:
        container: ${{ matrix.test[1] }}
        test: ${{ matrix[0] }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        docker pull ${container}
        kind load docker-image ${container}
        if [[ "${test}" == "nginx-service" ]]; then
            docker pull nginx
            kind load docker-image nginx
        fi
        make
        make install

    - name: Test ${{ matrix.test[0] }}
      env:
        name: ${{ matrix.test[0] }}
        jobtime: ${{ matrix.test[2] }}
      run: /bin/bash ./script/test.sh ${name} ${jobtime}